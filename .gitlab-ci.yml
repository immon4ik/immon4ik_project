stages:
    - build
    - test
    - review
    - stage
    - production
build_job:
    stage: build
    image: 'docker:19.03.8'
    services:
        - 'docker:19.03.8-dind'
    before_script:
        - 'docker info'
        - 'apk add make && apk add bash'
    script:
        - 'echo ''Building'''
        - 'cd gitlab-ci && ls && make build && make push'
    after_script:
        - 'docker image ls'
test_unit_job_ui:
    stage: test
    image: 'python:3.8.2-alpine'
    services:
        - 'python:3.8.2-alpine'
    before_script:
        - 'cd src/project-ui/ && pip install -r requirements.txt -r requirements-test.txt'
    script:
        - 'echo ''Testing otus-app-ui'''
        - 'python -m unittest discover -s tests/'
        - 'coverage run -m unittest discover -s tests/'
        - 'coverage report --include ui/ui.py'
test_unit_job_crawler:
    stage: test
    image: 'python:3.6.0-alpine'
    services:
        - 'python:3.6.0-alpine'
    before_script:
        - 'cd src/project-crawler/ && pip install -r requirements.txt -r requirements-test.txt'
    script:
        - 'echo ''Testing otus-app-crawler'''
        - 'python -m unittest discover -s tests/'
        - 'coverage run -m unittest discover -s tests/'
        - 'coverage report --include crawler/crawler.py'
test_integration_job:
    stage: test
    script:
        - 'echo ''Testing 2'''
deploy_dev_job:
    stage: review
    script:
        - 'echo ''Deploy on dev'''
    environment:
        name: dev
        url: 'http://dev.example.com'
branch_review:
    stage: review
    image: 'docker:19.03.8'
    variables:
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://$CI_SERVER_HOST:2376'
        DOCKER_CERT_PATH: /tmp/$CI_COMMIT_REF_NAME
    before_script:
        - 'apk add make && apk add bash'
        - 'cd gitlab-ci && make bsgl'
    after_script:
        - 'docker ps -as'
        - 'docker image ls'
    only:
        - branches
    except:
        - master
    script:
        - 'echo "Deploy on branch/$CI_COMMIT_REF_NAME environment"'
        - 'ls && make up && make upmon'
    environment:
        name: branch/$CI_COMMIT_REF_NAME
        url: 'http://$CI_SERVER_HOST:8000'
        on_stop: stop_branch_review
        auto_stop_in: '3 days'
stop_branch_review:
    stage: review
    image: 'docker:19.03.8'
    variables:
        DOCKER_TLS_VERIFY: '1'
        DOCKER_HOST: 'tcp://$CI_SERVER_HOST:2376'
        DOCKER_CERT_PATH: /tmp/$CI_COMMIT_REF_NAME
    before_script:
        - 'apk add make && apk add bash'
        - 'cd gitlab-ci && make bsgl'
    after_script:
        - 'docker ps -as'
        - 'docker image ls'
    only:
        - branches
    except:
        - master
    when: manual
    script:
        - 'echo ''Remove branch review app'''
        - 'ls && make downmon && make down && make imgrm'
        # - 'docker-compose -f ./src/docker-compose.yml down'
        # - 'docker image rm -f $(docker image ls -q ${DOCKER_HUB_LOGIN:-user}/otus-app-ui) || echo'
        # - 'docker image rm -f $(docker image ls -q ${DOCKER_HUB_LOGIN:-user}/otus-app-crawler) || echo'
        # - 'docker image rm -f $(docker image ls -q --filter ''dangling=true'') || echo'
    environment:
        name: branch/$CI_COMMIT_REF_NAME
        action: stop
staging:
    stage: stage
    when: manual
    only:
        - /^\d+\.\d+\.\d+/
    script:
        - 'echo ''Deploy on stage'''
    environment:
        name: stage
        url: 'https://beta.example.com'
production:
    stage: production
    when: manual
    only:
        - /^\d+\.\d+\.\d+/
    script:
        - 'echo ''Deploy on production'''
    environment:
        name: production
        url: 'https://example.com'
